//Mycalinksアプリとの連携部分
//POS内で、アプリに関連したサービスを提供しているだけなので、データベースはアプリ側じゃなくてOK
//クーポン、告知など

//どれも広告活動に近いためadvertisementで
enum AppAdvertisementStatus {
  DRAFT //下書き
  UNPUBLISHED //未公開
  PUBLISHED //公開済み
  FINISHED //公開終了
}

//広告の種類
enum AppAdvertisementKind {
  PURCHASE_TABLE //買取表
  EVENT //イベント
  NOTIFICATION //お知らせ
  TICKET //チケット
}

//表示タイプ（必要ない説ある）
enum AppAdvertisementDataType {
  IMAGE //画像
  TEXT //文字
}

//アプリ広告
model App_Advertisement {
  id                      Int         @db.UnsignedInt()             @id @default(autoincrement())
  store_id          Int  @db.UnsignedInt() //この広告をうったストア
  store             Store     @relation(fields: [store_id], references: [id], onDelete: Cascade)
  staff_account_id      Int  @db.UnsignedInt() //担当者
  staff_account         Account @relation(fields: [staff_account_id], references: [id], onDelete: Cascade)
  display_name String //タイトルに相当 改行も含まれる
  status AppAdvertisementStatus @default(DRAFT) //ステータス
  on_pause         Boolean         @default(false) @db.UnsignedTinyInt() //中止中かどうか こいつがtrueだったらステータスがPUBLISHEDだとしても公開されない
  deleted                 Boolean                  @default(false) @db.UnsignedTinyInt() //論理削除
  @@index([deleted])
  kind AppAdvertisementKind //広告の種類
  start_at   DateTime        @db.Timestamp(0) //広告の開始日時
  end_at   DateTime?        @db.Timestamp(0) //広告の終了日時 指定しなかったら手動で公開終了するまでは公開し続ける
  thumbnail_image_url String? //サムネの画像URL
  data_type AppAdvertisementDataType //データタイプ
  data_text             String?             @db.Text //データの文字列
  data_images App_Advertisement_Image[] //データの画像
}

//データタイプが画像だった時の画像の配列
model App_Advertisement_Image {
  advertisement_id          Int  @db.UnsignedInt()
  advertisement             App_Advertisement     @relation(fields: [advertisement_id], references: [id], onDelete: Cascade)
  image_url String //画像URL
  
  @@id([advertisement_id, image_url]) //同じ広告に対して全く同じ画像（アップロードしたタイミングまで）は設定できないという制約も入れた方が良いため、複合キーで
}


//アプリユーザーのPOS・EC特有情報はこちらで管理する
model App_User {
  app_user_id Int @id
  gmo_customer_id String //GMOでのメンバーID

  cards Gmo_Credit_Card[] //カード
}